risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(even, safe, risk)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4","even" =  "salmon1","safe"="olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(even, safe, risk)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'red4'), fill="red4",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4", "salmon1","olivedrab4"))
scores_plot = as.data.frame(smpca$x)
ggplot(data = scores_plot, aes(x = PC1, y = PC2, label = rownames(scores_plot))) +
geom_hline(yintercept = 0, colour = "gray65") +
geom_vline(xintercept = 0, colour = "gray65") +
geom_text(colour = "salmon3", alpha = 0.8, size = 4)
std_dev = smpca$sdev
pca_var = std_dev^2
prop_var <- pca_var/sum(pca_var)
plot(cumsum(prop_var), xlab = "Principal Component", ylab = "Proportion of Variance Explained",
type = "b")
summary(smpca)
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'even'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'risk'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'even'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'risk'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("even", "risk", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("even", "risk", "safe"),
values = c("red4", "salmon1","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="white",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'white',position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'olivedrab4',alpha = 0.3,position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'olivedrab4',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',alpha = 0.3,position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.3,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',alpha = 0.9,position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.3,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',alpha = 1.0,position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',alpha = 1.0,position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.6,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.8,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',alpha = 1.0,position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
even = sim_even_split[,n_days]- initial_wealth
safe = sim_safe_split[,n_days]- initial_wealth
risk = sim_risky_split[,n_days]- initial_wealth
plot_df = data.frame(risk,even, safe)
ggplot(data = plot_df) +
geom_histogram(aes(risk,color = 'risk'), fill="red4",alpha = 0.9,position="identity")+
geom_histogram(aes(even,color = 'even'),fill = 'salmon1',alpha = 0.6,position="identity") +
geom_histogram(aes(safe,color = 'safe'),fill = 'white',alpha = 1.0,position="identity")+
xlim(c(-25000,60000))+
xlab('Portfolio Profit/Loss Spread')+
ylab('Frequency')+
scale_colour_manual("",
breaks = c("risk", "even", "safe"),
values = c("salmon1", "red4","olivedrab4"))
set.seed(1)
weight = runif(5)
weight = weight / sum(weight)
for (i in 1:10){
weight = runif(5)
weight = weight / sum(weight)
initial_wealth = 100000
VaR = get_return(initial_wealth,weight,all_returns)
cat('The portfolio weight is: ')
print(weight)
cat('VaR of the portfolio is: ')
print(VaR)
}
set.seed(1)
weight = runif(5)
weight = weight / sum(weight)
for (i in 1:10){
weight = runif(5)
weight = weight / sum(weight)
initial_wealth = 100000
VaR = get_return(initial_wealth,weight,all_returns)
cat('The portfolio weight is: ')
print(weight)
cat('VaR of the portfolio is: ')
print(VaR)
}
ggpairs(all_returns)
install.packages("GGally")
library(GGally)
ggpairs(all_returns)
library(GGally)
ggpairs(as.data.frame(all_returns))
?ggpairs
# The sample correlation matrix
cor(all_returns)
library(GGally)
ggpairs(as.data.frame(all_returns))+theme_bw()
knitr::opts_chunk$set(echo = TRUE)
#P(TC|Y) = P(TC|Y) * P(Y) /
#            ( P(TC|Y) * P(Y) + P(TC|N) * P(N) )
(0.5/0.65) * 0.65 / ((0.5/0.65) * 0.65 + (0.2/0.35) * 0.35)
#P(TC|Y) = P(TC|Y) * P(Y) /
#            ( P(TC|Y) * P(Y) + P(TC|N) * P(N) )
(0.5/0.65) * 0.65 / ((0.5/0.65) * 0.65 + (0.3/0.35) * 0.35)
#P(TC|Y) = P(TC|Y) * P(Y) /
#            ( P(TC|Y) * P(Y) + P(TC|N) * P(N) )
(0.5/0.65) * 0.65 / ((0.5/0.65) * 0.65 + (0.2/0.35) * 0.35)
(0.65-0.3*0.5) / 0.7
library(corrplot)
install.packages("corrplot")
knitr::opts_chunk$set(echo = TRUE, warning=FALSE)
library(mosaic)
library(quantmod)
library(foreach)
library(GGally)
knitr::opts_chunk$set(echo = TRUE)
set.seed(1)
initial_wealth = 100000
sim_even_split = foreach(i=1:5000, .combine='rbind') %do% {
total_wealth = initial_wealth
weights = c(0.2, 0.2, 0.2, 0.2, 0.2) #seperate evenly
holdings = weights * total_wealth
n_days = 20
wealthtracker = rep(0, n_days)
for(today in 1:n_days) {
return.today = resample(all_returns, 1, orig.ids=FALSE)
holdings = holdings + holdings*return.today #p+r(stock)
total_wealth = sum(holdings)#p+r(portfolio)
wealthtracker[today] = total_wealth
holdings = total_wealth * weights #daily rebalance
}
wealthtracker
}
even_mean <- mean(sim_even_split[,n_days])
even_return <- (mean(sim_even_split[,n_days])-initial_wealth)/initial_wealth
even_5_perc <- quantile(sim_even_split[,n_days], 0.05) - initial_wealth
# Print out results
cat("For an even split investment of $100,000,\nExpected holdings:", even_mean, "\nReturn Rate:", even_return, "\n5% VaR:", even_5_perc)
set.seed(1)
initial_wealth = 100000
sim_even_split = foreach(i=1:5000, .combine='rbind') %do% {
total_wealth = initial_wealth
weights = c(0.2, 0.2, 0.2, 0.2, 0.2) #seperate evenly
holdings = weights * total_wealth
n_days = 20
wealthtracker = rep(0, n_days)
for(today in 1:n_days) {
return.today = resample(all_returns, 1, orig.ids=FALSE)
holdings = holdings + holdings*return.today #p+r(stock)
total_wealth = sum(holdings)#p+r(portfolio)
wealthtracker[today] = total_wealth
holdings = total_wealth * weights #daily rebalance
}
wealthtracker
}
even_mean <- mean(sim_even_split[,n_days])
even_return <- (mean(sim_even_split[,n_days])-initial_wealth)/initial_wealth
even_5_perc <- quantile(sim_even_split[,n_days], 0.05) - initial_wealth
# Print out results
cat("For an even split investment of $100,000,\nExpected holdings:", even_mean, "\nReturn Rate:", even_return, "\n5% VaR:", even_5_perc)
set.seed(1)
initial_wealth = 100000
sim_safe_split = foreach(i=1:5000, .combine='rbind') %do% {
total_wealth = initial_wealth
weights = c(0.5, 0.3, 0.2, 0, 0) # 0.2 SPY, 0.3 TLT, 0.5 LQD
holdings = weights * total_wealth
n_days = 20
wealthtracker = rep(0, n_days)
for(today in 1:n_days) {
return.today = resample(all_returns, 1, orig.ids=FALSE)
holdings = holdings + holdings*return.today
total_wealth = sum(holdings)
wealthtracker[today] = total_wealth
holdings = total_wealth * weights
}
wealthtracker
}
#safe_hist = hist(sim_safe_split[,n_days]- initial_wealth, breaks=30)
safe_mean <- mean(sim_safe_split[,n_days])
safe_return <- (mean(sim_safe_split[,n_days])-initial_wealth)/initial_wealth
safe_5_perc <- quantile(sim_safe_split[,n_days], 0.05) - initial_wealth
# Print out results
cat("For an safer split investment of $100,000,\nExpected holdings:",safe_mean, "\nReturn Rate:", safe_return, "\n5% VaR:", safe_5_perc)
set.seed(1)
initial_wealth = 100000
sim_risky_split = foreach(i=1:5000, .combine='rbind') %do% {
total_wealth = initial_wealth
weights = c(0, 0, 0, 0.3, 0.7) #0.7 EEM, 0.3 VNQ
holdings = weights * total_wealth
n_days = 20
wealthtracker = rep(0, n_days)
for(today in 1:n_days) {
return.today = resample(all_returns, 1, orig.ids=FALSE)
holdings = holdings + holdings*return.today
total_wealth = sum(holdings)
wealthtracker[today] = total_wealth
holdings = total_wealth * weights
}
wealthtracker
}
risky_mean <- mean(sim_risky_split[,n_days])
risky_return <- (mean(sim_risky_split[,n_days])-initial_wealth)/initial_wealth
risky_5_perc <- quantile(sim_risky_split[,n_days], 0.05) - initial_wealth
# Print out results
cat("For a risky split investment of $100,000,\nExpected holdings:", risky_mean, "\nReturn Rate:", risky_return, "\n5% VaR:", risky_5_perc)
library(tidyverse)  # data manipulation
install.packages("tidyverse")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
install.packages("factoextra")
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(corrplot)
# read file
social <- read.csv(url("https://raw.githubusercontent.com/jgscott/STA380/master/data/social_marketing.csv"), row.names = 1)
#drop columns spam, adult, and uncategorized from file
social = subset(social, select = -c(spam,adult,uncategorized))
corrplot(cor(social), type = "lower")
knitr::include_graphics("https://github.com/tiffblahthegiraffe/STA380_HW/blob/master/plot.png")
knitr::include_graphics("https://github.com/tiffblahthegiraffe/STA380_HW/blob/master/group.png")
#create hypothetical groups in dataframe
social["influencer"] = social$chatter+social$photo_sharing+social$shopping+social$current_events+social$dating + social$cooking+social$beauty+social$fashion
social["businessman"] = social$travel + social$politics +social$computers +social$news + social$automotive +social$business
social['artists'] = social$tv_film +social$art +social$music +social$crafts +social$small_business
social['familyguy'] = social$sports_fandom + social$religion +social$parenting +social$school +social$food +social$family +social$home_and_garden
social['dude'] = social$online_gaming +social$college_uni +social$sports_playing
social['fit'] =social$outdoors+social$health_nutrition+social$personal_fitness+social$eco
#select six groups and form new dataframe
social_new = social[, c(34:39)]
#normalize social_new for better comparison between rows
social_norm = social_new/rowSums(social_new)
#scale social_norm
social_scaled <- scale(social_norm, center=TRUE, scale=TRUE)
#select K
set.seed(123)
fviz_nbclust(social_scaled, kmeans, method = "wss")
#select K
set.seed(123)
fviz_nbclust(social_scaled, kmeans, method = "wss")
